{"version":3,"file":"react-global-states.umd.min.js","sources":["../node_modules/@babel/runtime/helpers/extends.js","../src/index.ts"],"sourcesContent":["function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { useState, useEffect } from 'react';\n\ninterface StoreMethods<Store> {\n\tuseGlobalStates(propsToConnectTo: (keyof Store)[]): Partial<Store>;\n\tgetStates(): Store;\n\tsetStates(newStore: Store): void;\n\tupdateStates(partial: Partial<Store>): void;\n}\n\nexport const createStore = function createStore<YourStoreInterface>(\n\tinitStore: YourStoreInterface\n): StoreMethods<YourStoreInterface> {\n\ttype Store = YourStoreInterface;\n\ttype StoreKey = keyof Store;\n\ttype Handler = (store: Store) => void;\n\n\t// \"The\" global store\n\tlet store = initStore;\n\n\t// internal publisher-subscriber system to\n\t// notify containers of store changes.\n\tconst pubsub = {\n\t\thandlers: [] as Handler[],\n\t\tsubscribe(handler: Handler): void {\n\t\t\t// console.log('subscribed');\n\t\t\tif (!this.handlers.includes(handler)) {\n\t\t\t\tthis.handlers.push(handler);\n\t\t\t}\n\t\t},\n\t\tunsubscribe(handler: Handler): void {\n\t\t\t// console.log('unsubscribed');\n\t\t\tconst index = this.handlers.indexOf(handler);\n\t\t\tif (index > -1) {\n\t\t\t\tthis.handlers.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\tnotify(newStore: Store): void {\n\t\t\tthis.handlers.forEach((handler: Handler) => handler(newStore));\n\t\t},\n\t};\n\n\tconst getStates = (): YourStoreInterface => ({ ...store });\n\n\t// global state merger. unlike redux, I am not enforcing reducer layer\n\tconst plainObjectPrototype = Object.getPrototypeOf({});\n\tconst isPlainObject = (obj: unknown): boolean =>\n\t\tBoolean(\n\t\t\tobj &&\n\t\t\t\ttypeof obj === 'object' &&\n\t\t\t\tObject.getPrototypeOf(obj) === plainObjectPrototype\n\t\t);\n\t// updateStates merges properties upto two levels of the data store\n\tconst updateStates = (partial: Partial<Store>): void => {\n\t\tconst newStore = { ...store };\n\t\tconst propNames = Object.keys(partial);\n\t\twhile (propNames.length) {\n\t\t\tconst propName: string = propNames.shift() as string;\n\t\t\tconst oldValue = store[propName];\n\t\t\tconst newValue = partial[propName];\n\t\t\tif (isPlainObject(oldValue) && isPlainObject(newValue)) {\n\t\t\t\tnewStore[propName] = {\n\t\t\t\t\t...oldValue,\n\t\t\t\t\t...newValue,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tnewStore[propName] = newValue;\n\t\t\t}\n\t\t}\n\t\tstore = newStore;\n\t\tpubsub.notify(newStore);\n\t};\n\n\tconst setStates = (newStore: Store): void => {\n\t\tstore = newStore;\n\t\tpubsub.notify(newStore);\n\t};\n\n\t// utility\n\tconst twoLevelIsEqual = (\n\t\toldState: Store,\n\t\tnewState: Store,\n\t\tlevel = 1\n\t): boolean => {\n\t\tif (\n\t\t\toldState === null ||\n\t\t\tnewState === null ||\n\t\t\toldState === undefined ||\n\t\t\tnewState === undefined\n\t\t) {\n\t\t\treturn oldState === newState;\n\t\t}\n\n\t\tconst oldStatePrototype = Object.getPrototypeOf(oldState);\n\t\tif (\n\t\t\tlevel <= 2 &&\n\t\t\t(oldStatePrototype === plainObjectPrototype || Array.isArray(oldState)) &&\n\t\t\toldStatePrototype === Object.getPrototypeOf(newState)\n\t\t) {\n\t\t\t// check if all props of oldState is in newState\n\t\t\tlet isEqual = Object.entries(oldState).every(([key, val]) =>\n\t\t\t\ttwoLevelIsEqual(val, newState[key], level + 1)\n\t\t\t);\n\t\t\t// check if all props of newState is in oldState\n\t\t\tisEqual =\n\t\t\t\tisEqual &&\n\t\t\t\tObject.entries(newState).every(([key, val]) =>\n\t\t\t\t\ttwoLevelIsEqual(oldState[key], val, level + 1)\n\t\t\t\t);\n\t\t\t// if so, they are equal (upto two levels).\n\t\t\treturn isEqual;\n\t\t}\n\t\tif (oldState instanceof Date && newState instanceof Date) {\n\t\t\treturn oldState.getTime() === newState.getTime();\n\t\t}\n\t\treturn oldState === newState;\n\t};\n\n\tconst useGlobalStates = (\n\t\tpropsToConnectTo: StoreKey[]\n\t): Partial<YourStoreInterface> => {\n\t\tconst [state, setState] = useState(\n\t\t\tpropsToConnectTo.reduce((acc, propName) => {\n\t\t\t\tif (propName in store) {\n\t\t\t\t\tacc[propName] = store[propName];\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, {} as Store)\n\t\t);\n\n\t\tconst propNameHash = propsToConnectTo\n\t\t\t.slice()\n\t\t\t.sort()\n\t\t\t.join('|');\n\t\tuseEffect(() => {\n\t\t\tconst newStateHandler = (newStore: Store): void => {\n\t\t\t\tconst newState = propsToConnectTo.reduce((acc, propName) => {\n\t\t\t\t\tif (propName in newStore) {\n\t\t\t\t\t\tacc[propName] = newStore[propName];\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} as Store);\n\t\t\t\t// console.log('current state', state);\n\t\t\t\t// console.log('new state', newState);\n\t\t\t\t// console.log('twoLevelIsEqual', twoLevelIsEqual(state, newState));\n\t\t\t\tif (!twoLevelIsEqual(state, newState)) {\n\t\t\t\t\tsetState(newState);\n\t\t\t\t}\n\t\t\t};\n\t\t\tpubsub.subscribe(newStateHandler);\n\t\t\t// on component unmount, unsubscribe to prevent mem leak\n\t\t\treturn (): void => pubsub.unsubscribe(newStateHandler);\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t}, [state, propNameHash]);\n\n\t\treturn state;\n\t};\n\n\treturn {\n\t\tuseGlobalStates,\n\t\tgetStates,\n\t\tsetStates,\n\t\tupdateStates,\n\t};\n};\n\nconst defaultStore = createStore({});\n\nexport const {\n\tuseGlobalStates,\n\tgetStates,\n\tsetStates,\n\tupdateStates,\n} = defaultStore;\n\n// -------------- app code testing ------------------\n/*\ninterface MyStoreType {\n\tgreeting: string;\n\tcart: {\n\t\ttotalQty: number;\n\t\titems: {\n\t\t\tqty: number;\n\t\t\tsku: string;\n\t\t}[];\n\t};\n\ttest: {\n\t\ttest2: string;\n\t};\n}\nconst { updateStates: updater } = createStore<MyStoreType>({\n\tgreeting: 'hi',\n\tcart: { totalQty: 0, items: [] },\n\ttest: { test2: 'hi' },\n});\nupdater({ greeting: 'hi' }); // no error\nupdater({ cart: { greeting: 'hi' } }); // error\nupdater({ cart: { cart: {} } }); // error\nupdater({ cart: { test: {} } }); // error\nupdater({ cart: { test2: 'h1' } }); // error\nupdater({ cart: { totalQty: 0, items: [] } }); // no error\n*/\n"],"names":["_extends","module","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","createStore","initStore","store","pubsub","handlers","subscribe","handler","includes","push","unsubscribe","index","indexOf","splice","notify","newStore","forEach","plainObjectPrototype","getPrototypeOf","isPlainObject","obj","Boolean","twoLevelIsEqual","oldState","newState","level","undefined","oldStatePrototype","Array","isArray","isEqual","entries","every","val","Date","getTime","useGlobalStates","propsToConnectTo","useState","reduce","acc","propName","state","setState","propNameHash","slice","sort","join","useEffect","newStateHandler","getStates","setStates","updateStates","partial","propNames","keys","shift","oldValue","newValue","defaultStore"],"mappings":"sUAAA,SAASA,IAeP,OAdAC,UAAiBD,EAAWE,OAAOC,QAAU,SAAUC,GACrD,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFJ,EAASa,MAAMC,KAAMR,WAG9BL,UAAiBD,KCTJe,EAAc,SAC1BC,OAOIC,EAAQD,EAINE,EAAS,CACdC,SAAU,GACVC,mBAAUC,GAEJP,KAAKK,SAASG,SAASD,SACtBF,SAASI,KAAKF,IAGrBG,qBAAYH,OAELI,EAAQX,KAAKK,SAASO,QAAQL,GAChCI,GAAS,QACPN,SAASQ,OAAOF,EAAO,IAG9BG,gBAAOC,QACDV,SAASW,SAAQ,SAACT,UAAqBA,EAAQQ,QAOhDE,EAAuB7B,OAAO8B,eAAe,IAC7CC,EAAgB,SAACC,UACtBC,QACCD,GACgB,iBAARA,GACPhC,OAAO8B,eAAeE,KAASH,IA6B5BK,EAAkB,SACvBC,EACAC,EACAC,eAAAA,IAAAA,EAAQ,GAGM,OAAbF,GACa,OAAbC,QACaE,IAAbH,QACaG,IAAbF,SAEOD,IAAaC,MAGfG,EAAoBvC,OAAO8B,eAAeK,MAE/CE,GAAS,IACRE,IAAsBV,GAAwBW,MAAMC,QAAQN,KAC7DI,IAAsBvC,OAAO8B,eAAeM,GAC3C,KAEGM,EAAU1C,OAAO2C,QAAQR,GAAUS,OAAM,gBAAErC,OAAKsC,cACnDX,EAAgBW,EAAKT,EAAS7B,GAAM8B,EAAQ,aAG7CK,EACCA,GACA1C,OAAO2C,QAAQP,GAAUQ,OAAM,gBAAErC,OAAKsC,cACrCX,EAAgBC,EAAS5B,GAAMsC,EAAKR,EAAQ,aAK3CF,aAAoBW,MAAQV,aAAoBU,KAC5CX,EAASY,YAAcX,EAASW,UAEjCZ,IAAaC,SA2Cd,CACNY,gBAzCuB,SACvBC,SAE0BC,WACzBD,EAAiBE,QAAO,SAACC,EAAKC,UACzBA,KAAYtC,IACfqC,EAAIC,GAAYtC,EAAMsC,IAEhBD,IACL,KANGE,OAAOC,OASRC,EAAeP,EACnBQ,QACAC,OACAC,KAAK,YACPC,aAAU,eACHC,EAAkB,SAAClC,OAClBS,EAAWa,EAAiBE,QAAO,SAACC,EAAKC,UAC1CA,KAAY1B,IACfyB,EAAIC,GAAY1B,EAAS0B,IAEnBD,IACL,IAIElB,EAAgBoB,EAAOlB,IAC3BmB,EAASnB,WAGXpB,EAAOE,UAAU2C,GAEV,kBAAY7C,EAAOM,YAAYuC,MAEpC,CAACP,EAAOE,IAEJF,GAKPQ,UAtHiB,uBAAgC/C,IAuHjDgD,UAxFiB,SAACpC,GAClBZ,EAAQY,EACRX,EAAOU,OAAOC,IAuFdqC,aA7GoB,SAACC,WACftC,OAAgBZ,GAChBmD,EAAYlE,OAAOmE,KAAKF,GACvBC,EAAU7D,QAAQ,KAClBgD,EAAmBa,EAAUE,QAC7BC,EAAWtD,EAAMsC,GACjBiB,EAAWL,EAAQZ,GACrBtB,EAAcsC,IAAatC,EAAcuC,GAC5C3C,EAAS0B,QACLgB,EACAC,GAGJ3C,EAAS0B,GAAYiB,EAGvBvD,EAAQY,EACRX,EAAOU,OAAOC,MAgGV4C,EAAe1D,EAAY,IAGhCmC,EAIGuB,EAJHvB,gBACAc,EAGGS,EAHHT,UACAC,EAEGQ,EAFHR,UACAC,EACGO,EADHP"}